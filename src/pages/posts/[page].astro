---
import { getCollection } from 'astro:content';
import type { GetStaticPathsOptions } from 'astro';
import Breadcrumbs from '@components/Breadcrumbs.astro';
import Layout from '@layouts/Layout.astro';
import PostCard from '@components/PostCard.astro';
import Pagination from '@components/Pagination.astro';

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const posts = (await getCollection('posts'))
    .filter(post => post.data.public)
    .sort((a, b) => b.data.publicationDate.valueOf() - a.data.publicationDate.valueOf());
  
  return paginate(posts, { pageSize: 10 });
}

const { page } = Astro.props;
const pageTitle = page.currentPage === 1 ? 'Blog Posts' : `Blog Posts - Page ${page.currentPage}`;
---

<Layout title={pageTitle}>
  <div class="posts-page-container">
    <div class="page-header">
      <Breadcrumbs path={['posts']} />
      <h1 class="page-title">Blog Posts</h1>
      <p class="page-description">Explore my thoughts, stories, and technical insights</p>
      <div class="header-decoration"></div>
    </div>
    
    <div class="posts-grid">
      {page.data.map((post) => (
        <PostCard
          category={post.data.category}
          title={post.data.title}
          description={post.data.description}
          publicationDate={post.data.publicationDate}
          slug={post.data.slug}
        />
      ))}
    </div>

    <Pagination 
      currentPage={page.currentPage} 
      totalPages={page.lastPage} 
      baseUrl="/posts/"
    />
  </div>
</Layout>

<style>
  .posts-page-container {
    max-width: var(--max-width);
    margin: 0 auto;
    padding: 0 1rem 3rem;
  }

  .page-header {
    margin: 2rem 0 4rem;
    text-align: center;
    position: relative;
  }

  .page-title {
    font-size: var(--step-4);
    margin: 1rem 0;
    background: linear-gradient(45deg, var(--color-accent), var(--color-button-primary));
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    text-fill-color: transparent;
    animation: fadeIn 0.8s ease-out;
  }

  .page-description {
    color: var(--color-text-muted);
    font-size: var(--step-1);
    max-width: 500px;
    margin: 0 auto 2rem;
    animation: fadeIn 1s ease-out 0.2s both;
  }

  .header-decoration {
    width: 80px;
    height: 4px;
    background: linear-gradient(90deg, var(--color-accent), var(--color-button-primary));
    margin: 0 auto;
    border-radius: 4px;
    animation: fadeIn 1.2s ease-out 0.4s both;
  }

  .posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: 2rem;
    margin-bottom: 3rem;
  }

  .posts-grid > * {
    animation: fadeUp 0.8s ease-out;
    animation-fill-mode: both;
  }

  .posts-grid > *:nth-child(2) {
    animation-delay: 0.1s;
  }

  .posts-grid > *:nth-child(3) {
    animation-delay: 0.2s;
  }

  .posts-grid > *:nth-child(4) {
    animation-delay: 0.3s;
  }

  .posts-grid > *:nth-child(5) {
    animation-delay: 0.4s;
  }

  .posts-grid > *:nth-child(6) {
    animation-delay: 0.5s;
  }

  @keyframes fadeUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @media (max-width: 768px) {
    .posts-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
