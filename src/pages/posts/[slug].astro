---
import { getCollection } from 'astro:content';
import Breadcrumbs from '@components/Breadcrumbs.astro';
import PostSnugLayout from '@layouts/PostSnugLayout.astro';
import { formatDate } from '../../utils/date';
import { render } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  
  return posts.map(post => ({
    params: { slug: post.data.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await render(post);

---

<PostSnugLayout title={post.data.title} description={post.data.description}>
  <Breadcrumbs path={['posts', post.data.title]} />
  <article class="post-container">
    <div class="post-background"></div>
    <header class="post-header">
      <h1 class="post-title">{post.data.title}</h1>
      <div class="post-meta">
        <div class="meta-item date">
          <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect><line x1="16" y1="2" x2="16" y2="6"></line><line x1="8" y1="2" x2="8" y2="6"></line><line x1="3" y1="10" x2="21" y2="10"></line></svg>
          <time datetime={post.data.publicationDate.toISOString()}>
            {formatDate(post.data.publicationDate)}
          </time>
        </div>
        {post.data.category && (
          <div class="meta-item category">
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20"></path><path d="M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"></path></svg>
            <span>{post.data.category}</span>
          </div>
        )}
        <div class="meta-item author">
          <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx="12" cy="7" r="4"></circle></svg>
          <span>{post.data.author}</span>
        </div>
      </div>
    </header>
    <div class="post-content">
      <Content />
    </div>
    <footer class="post-footer">
      <a href="/posts" class="back-button">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="19" y1="12" x2="5" y2="12"></line><polyline points="12 19 5 12 12 5"></polyline></svg>
        Back to Posts
      </a>
    </footer>
  </article>
</PostSnugLayout>

<style>
  .post-container {
    position: relative;
    max-width: var(--max-width);
    margin: 0 auto;
    padding: 0 1rem 3rem;
    overflow: hidden;
  }

  .post-background {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 300px;
    background: linear-gradient(135deg, var(--color-accent), var(--color-button-primary));
    opacity: 0.05;
    z-index: -1;
    border-radius: 0 0 50% 50% / 30px;
  }

  .post-header {
    margin: 3rem 0 2rem;
    text-align: center;
    position: relative;
  }

  .post-title {
    font-size: var(--step-4);
    margin: 0 0 1.5rem;
    background: linear-gradient(45deg, var(--color-accent), var(--color-button-primary));
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    text-fill-color: transparent;
    line-height: 1.2;
  }

  .post-meta {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1.5rem;
    color: var(--color-text-muted);
    font-size: var(--step--1);
    margin-bottom: 3rem;
  }

  .meta-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    border-radius: 50px;
    background-color: rgba(var(--color-card-rgb), 0.3);
    transition: transform var(--transition-medium), background-color var(--transition-medium);
  }

  .meta-item:hover {
    transform: translateY(-3px);
    background-color: rgba(var(--color-card-rgb), 0.5);
  }

  .category {
    text-transform: capitalize;
    color: var(--color-accent);
    font-weight: 500;
  }

  .post-content {
    max-width: 70ch;
    margin: 0 auto;
    font-size: var(--step-0);
    line-height: 1.7;
  }

  .post-content :global(h2) {
    font-size: var(--step-2);
    margin: 2rem 0 1rem;
    color: var(--color-text-base);
    position: relative;
    padding-bottom: 0.5rem;
  }

  .post-content :global(h2::after) {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 50px;
    height: 3px;
    background: linear-gradient(90deg, var(--color-accent), transparent);
    border-radius: 3px;
  }

  .post-content :global(h3) {
    font-size: var(--step-1);
    margin: 1.5rem 0 1rem;
    color: var(--color-text-base);
  }

  .post-content :global(p) {
    margin-bottom: 1.5rem;
  }

  .post-content :global(p:first-of-type) {
    font-size: var(--step-1);
    color: var(--color-text-muted);
    font-weight: 400;
  }

  .post-content :global(a) {
    color: var(--color-link);
    position: relative;
    text-decoration: none;
    transition: color var(--transition-medium);
  }

  .post-content :global(a:hover) {
    color: var(--color-accent);
  }

  .post-content :global(a::after) {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 100%;
    height: 1px;
    background-color: var(--color-accent);
    transform: scaleX(0);
    transform-origin: right;
    transition: transform var(--transition-medium);
  }

  .post-content :global(a:hover::after) {
    transform: scaleX(1);
    transform-origin: left;
  }

  .post-content :global(ul), .post-content :global(ol) {
    margin: 1.5rem 0;
    padding-left: 1.5rem;
  }

  .post-content :global(li) {
    margin-bottom: 0.5rem;
  }

  .post-content :global(blockquote) {
    border-left: 4px solid var(--color-accent);
    padding-left: 1.5rem;
    margin: 2rem 0;
    font-style: italic;
    color: var(--color-text-muted);
    position: relative;
    background-color: rgba(var(--color-accent-rgb), 0.05);
    border-radius: 0 8px 8px 0;
    padding: 1.5rem 1.5rem 1.5rem 2rem;
  }

  .post-content :global(blockquote::before) {
    content: '"';
    position: absolute;
    top: 0;
    left: 0.5rem;
    font-size: 3rem;
    color: var(--color-accent);
    opacity: 0.2;
    line-height: 1;
  }

  .post-content :global(img) {
    max-width: 100%;
    border-radius: 8px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    margin: 2rem 0;
    transition: transform var(--transition-medium);
  }

  .post-content :global(img:hover) {
    transform: scale(1.02);
  }

  .post-content :global(code) {
    background-color: rgba(var(--color-card-rgb), 0.5);
    padding: 0.2em 0.4em;
    border-radius: 3px;
    font-size: 0.9em;
  }

  .post-content :global(div[style*="border"]) {
    border-radius: 8px !important;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1) !important;
    margin: 2rem 0 !important;
    transition: transform var(--transition-medium), box-shadow var(--transition-medium) !important;
  }

  .post-content :global(div[style*="border"]:hover) {
    transform: translateY(-5px) !important;
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15) !important;
  }

  .post-footer {
    margin-top: 3rem;
    display: flex;
    justify-content: center;
  }

  .back-button {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.5rem;
    background-color: var(--color-card);
    color: var(--color-text-base);
    border-radius: 50px;
    font-weight: 500;
    transition: all var(--transition-medium);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }

  .back-button:hover {
    background-color: var(--color-accent);
    color: white;
    transform: translateY(-3px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
  }

  @media (max-width: 768px) {
    .post-meta {
      flex-direction: column;
      align-items: center;
      gap: 0.75rem;
    }
    
    .post-title {
      font-size: var(--step-3);
    }
  }
</style>
