---
import { getCollection } from 'astro:content';
import type { GetStaticPathsOptions } from 'astro';
import Breadcrumbs from '@components/Breadcrumbs.astro';
import Layout from '@layouts/Layout.astro';
import LinkCard from '@components/LinkCard.astro';
import Pagination from '@components/Pagination.astro';
import PostCard from '@components/PostCard.astro';

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const allArticles = await getCollection('articles');
  const allShareables = await getCollection('shareables');
  
  const articles = allArticles
    .filter(article => article.data.public)
    .sort((a, b) => b.data.publicationDate.valueOf() - a.data.publicationDate.valueOf());

  const pages = paginate(articles, { pageSize: 40 });
  
  
  return pages;
}

const { page } = Astro.props;
const pageTitle = page.currentPage === 1 ? 'Resources' : `Resources - Page ${page.currentPage}`;
---

<Layout title={pageTitle}>
  <div class="page-content">
    <Breadcrumbs path={['Resources']} />
    <h1>Articles</h1>
    <hr/>

    <div class="finds-grid">
      {page.data.map((article) => (
        <LinkCard
          type={article.data.type}
          title={article.data.title}
          description={article.data.description}
          link={article.data.link}
          publicationDate={article.data.publicationDate}
        />
      ))}
    </div>

    <Pagination
      currentPage={page.currentPage}
      totalPages={page.lastPage}
      baseUrl="/resources/"
    />
  </div>
</Layout>

<style>
  .finds-container {
    max-width: var(--content-width);
    margin: 0 auto;
    padding: 2rem 1rem;
  }

  h1 {
    font-size: var(--step-4);
    margin: 0 0 2rem;
    color: var(--color-text-base);
    width: 50%;
  }


  .finds-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1.5rem;
    margin-bottom: 2rem;
  }

</style>
